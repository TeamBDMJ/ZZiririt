spring:
  profiles:
    group:
      local: local_profile,common #h2
      dev: dev_profile,common #postgresql
      prod: prod_profile,common
---
spring:
  config:
    activate:
      on-profile: prod_profile
  datasource:
    url: ${SPRING_PROD_DATASOURCE_URL}
    username: ${SPRING_PROD_DATASOURCE_USERNAME}
    password: ${SPRING_PROD_DATASOURCE_PASSWORD}
  jpa:
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
        show_sql: true
    open-in-view: false
  data:
    redis:
      host: ${REDIS_PROD_HOST}
      port: ${REDIS_PROD_PORT}
server:
  port: 8080
---
spring:
  config:
    activate:
      on-profile: dev_profile
  datasource:
    url: ${SPRING_DEV_DATASOURCE_URL}
    username: ${SPRING_DEV_DATASOURCE_USERNAME}
    password: ${SPRING_DEV_DATASOURCE_PASSWORD}
  jpa:
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
        show_sql: true
    open-in-view: false
  data:
    redis:
      host: ${REDIS_DEV_HOST}
      port: ${REDIS_DEV_PORT}
server:
  port: 8080
---
spring:
  config:
    activate:
      on-profile: local_profile
  datasource:
    url: ${SPRING_TEST_DATASOURCE_URL}
    username: ${SPRING_TEST_DATASOURCE_USERNAME}
    password: ${SPRING_TEST_DATASOURCE_PASSWORD}
  h2:
    console:
      enabled: true
  jpa:
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
        show_sql: true
    hibernate:
      ddl-auto: update
    open-in-view: false
  data:
    redis:
      host: ${REDIS_LOCAL_HOST}
      port: ${REDIS_LOCAL_PORT}
server:
  port: 8080
---
spring:
  config:
    activate:
      on-profile: common
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${SPRING_NAVER_CLIENTID}
            client-secret: ${SPRING_NAVER_CLIENTSECRET}
            scope: ${SPRING_NAVER_SCOPE}
            client-name: ${SPRING_NAVER_CLIENTNAME}
            authorization-grant-type: ${SPRING_NAVER_GRANTTYPE}
            redirect-uri: ${SPRING_NAVER_REDIRECT}

        provider:
          naver:
            authorization-uri: ${SPRING_NAVER_AUTHORIZATION_URI}
            token-uri: ${SPRING_NAVER_TOKEN_URI}
            user-info-uri: ${SPRING_NAVER_USER_INFO_URI}
            user-name-attribute: ${SPRING_NAVER_USER_NAME_ATTRIBUTE}

auth:
  jwt:
    issuer: ${AUTH_JWT_ISSUER}
    secret: ${AUTH_JWT_SECRET}
    accessTokenExpirationHour: ${AUTH_JWT_ACCESSTOKENEXP}
    refreshTokenExpirationHour: ${AUTH_JWT_REFRESHTOKENEXP}

cloud:
  aws:
    credentials:
      accessKey: ${AWS_S3_ACCESS_KEY}
      secretKey: ${AWS_S3_SECRET_KEY}
    s3:
      bucket: ${AWS_S3_BUCKET}
    region:
      static: ${AWS_S3_REGION}
    stack:
      auto: false

logging:
  level:
    org:
      hibernate:
        SQL: debug
        orm:
          jdbc:
            bind: trace